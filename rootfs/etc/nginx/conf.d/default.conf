# Add here all user agents that are to be blocked.
map $http_user_agent $bad_bot {
  default 0;
  libwww-perl                      1;
  ~(?i)(httrack|htmlparser|libwww) 1;
}

# Add here all referrers that are to blocked.
map $http_referer $bad_referer {
  default 0;
  ~(?i)(babes|click|diamond|forsale|girl|jewelry|love|nudit|organic|poker|porn|poweroversoftware|sex|teen|webcam|zippo|casino|replica) 1;
}

# Default server
server {
  server_name _;

  listen 80;
  listen [::]:80;

  access_log syslog:server=unix:/dev/log;
  error_log syslog:server=unix:/dev/log debug;

  root /var/www/public;

  index   index.html index.htm index.php;

  # Deny access based on the User-Agent header.
  if ($bad_bot) {
    return 444;
  }
  # Deny access based on the Referer header.
  if ($bad_referer) {
    return 444;
  }

  location /blog {
    try_files $uri $uri/ /blog/index.php?$args;
  }

  location ~ \.php$ {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;

    # Check that the PHP script exists before passing it
    try_files $fastcgi_script_name =404;
    set $path_info $fastcgi_path_info;
    fastcgi_param PATH_INFO $path_info;
    fastcgi_index index.php;
    fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
    include fastcgi_params;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
  }

  # Dont accept any sensitive script files
  location ~* .(pl|cgi|py|sh|lua)$ {
    return 444;
  }

  # Set expires time for browser caching for media files
  location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
    access_log off;
    log_not_found off;
    expires max;
  }

  # Set expires time for js and css files
  location ~* \.(js|css)$ {
    expires 24h;
    add_header Pragma public;
    add_header Cache-Control "public";
    log_not_found off;
  }

  # No php scripts in the uploads directory
  location ~* /(?:uploads|files)/.*.php$ {
    deny all;
  }

  # Block serving of hidden files
  location ~ /\. {
    deny  all;
    access_log off;
    log_not_found off;
  }

  location ~ /\.ht {
    deny all;
  }

  location ~ /.well-known {
    allow all;
  }

  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /usr/share/nginx/html;
  }

  location = /robots.txt {
    log_not_found off;
    access_log off;
    allow all;
  }

  # Remove the annoying favicon request in logs
  location = /favicon.ico {
    try_files $uri =204;
    access_log     off;
    log_not_found  off;
  }

  # Health check for Kubernetes readiness probe
  location /healthz {
    access_log off;
    return 200;
  }
}
